---
- name: Install pipx tools from source
  community.general.pipx:
    name: "{{ item.name }}"
    source: "{{ item.url }}"
    state: latest
  loop:
    - { name: 'crackmapexec', url: 'git+https://github.com/byt3bl33d3r/CrackMapExec' }
    - { name: 'certipy-ad', url: 'git+https://github.com/ly4k/Certipy.git' }
    - { name: 'bloodhound', url: 'git+https://github.com/dirkjanm/BloodHound.py.git' }
    - { name: 'donpapi', url: 'git+https://github.com/login-securite/DonPAPI.git' }

- name: Install pipx tools from name
  community.general.pipx:
    name: "{{ item.name }}"
    state: latest
  loop:
    - { name: 'lsassy' }
    - { name: 'coercer' }
    - { name: 'adidnsdump' }

- name: Remove Pyenv if installed
  ansible.builtin.file:
    path: /root/.pyenv/
    state: absent
  become: true

- name: Install Pyenv for root user
  ansible.builtin.shell:
    cmd: "curl https://pyenv.run | bash"
    chdir: /tmp/
  become: true

- name: Check if Pyenv lines are already in .zshrc
  ansible.builtin.shell:
    cmd: 'grep -q "export PYENV_ROOT" /root/.zshrc'
  register: pyenv_lines_exist
  failed_when: false
  changed_when: false
  become: true

- name: Add Pyenv to .zshrc
  ansible.builtin.lineinfile:
    path: /root/.zshrc
    line: |
      export PYENV_ROOT="$HOME/.pyenv"
      command -v pyenv >/dev/null || export PATH="$PYENV_ROOT/bin:$PATH"
      eval "$(pyenv init -)"
  when: pyenv_lines_exist.rc != 0
  become: true

- name: Source .zshrc
  ansible.builtin.shell:
    cmd: source /root/.zshrc
    executable: /usr/bin/zsh
  become: true

- name: Install Python 3.10 with Pyenv
  ansible.builtin.shell:
    cmd: "/root/.pyenv/bin/pyenv install 3.10.13"
  become: true
